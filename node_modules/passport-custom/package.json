{
  "_args": [
    [
      {
        "raw": "passport-custom@git+https://github.com/R-Vision/passport-custom.git",
        "scope": null,
        "escapedName": "passport-custom",
        "name": "passport-custom",
        "rawSpec": "git+https://github.com/R-Vision/passport-custom.git",
        "spec": "git+https://github.com/R-Vision/passport-custom.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:R-Vision/passport-custom.git",
          "sshUrl": "git+ssh://git@github.com/R-Vision/passport-custom.git",
          "httpsUrl": "git+https://github.com/R-Vision/passport-custom.git",
          "gitUrl": "git://github.com/R-Vision/passport-custom.git",
          "shortcut": "github:R-Vision/passport-custom",
          "directUrl": "https://raw.githubusercontent.com/R-Vision/passport-custom/master/package.json"
        }
      },
      "/home/ulknight/public_html/test1111"
    ]
  ],
  "_from": "git+https://github.com/R-Vision/passport-custom.git",
  "_id": "passport-custom@1.0.5",
  "_inCache": true,
  "_location": "/passport-custom",
  "_phantomChildren": {},
  "_requested": {
    "raw": "passport-custom@git+https://github.com/R-Vision/passport-custom.git",
    "scope": null,
    "escapedName": "passport-custom",
    "name": "passport-custom",
    "rawSpec": "git+https://github.com/R-Vision/passport-custom.git",
    "spec": "git+https://github.com/R-Vision/passport-custom.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:R-Vision/passport-custom.git",
      "sshUrl": "git+ssh://git@github.com/R-Vision/passport-custom.git",
      "httpsUrl": "git+https://github.com/R-Vision/passport-custom.git",
      "gitUrl": "git://github.com/R-Vision/passport-custom.git",
      "shortcut": "github:R-Vision/passport-custom",
      "directUrl": "https://raw.githubusercontent.com/R-Vision/passport-custom/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/R-Vision/passport-custom.git#2c32b9b91f11c09906c60752566c6dc75d155f63",
  "_shasum": "d23c42faa3bd9233dfa40648d3f645542a4f616e",
  "_shrinkwrap": null,
  "_spec": "passport-custom@git+https://github.com/R-Vision/passport-custom.git",
  "_where": "/home/ulknight/public_html/test1111",
  "author": {
    "name": "Mike Bell",
    "email": "mbell8903@yahoo.com"
  },
  "bugs": {
    "url": "http://github.com/mbell8903/passport-custom/issues"
  },
  "dependencies": {
    "passport-strategy": "1.x.x"
  },
  "description": "Custom authentication strategy for Passport.",
  "devDependencies": {
    "chai": "^2.1.0",
    "chai-passport-strategy": "0.1.x",
    "mocha": "^2.1.0"
  },
  "directories": {
    "example": "examples",
    "test": "test"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "gitHead": "2c32b9b91f11c09906c60752566c6dc75d155f63",
  "homepage": "https://github.com/mbell8903/passport-custom",
  "keywords": [
    "passport",
    "custom",
    "auth",
    "authn",
    "authentication"
  ],
  "license": "MIT",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "name": "passport-custom",
  "optionalDependencies": {},
  "readme": "# passport-custom\n\n[![Build](https://travis-ci.org/mbell8903/passport-custom.png)](https://travis-ci.org/mbell8903/passport-custom)\n[![Coverage Status](https://coveralls.io/repos/mbell8903/passport-custom/badge.png)](https://coveralls.io/r/mbell8903/passport-custom)\n[![Quality](https://codeclimate.com/github/mbell8903/passport-custom.png)](https://codeclimate.com/github/mbell8903/passport-custom)\n[![Dependencies](https://david-dm.org/mbell8903/passport-custom.png)](https://david-dm.org/mbell8903/passport-custom)\n[![Tips](http://img.shields.io/gittip/mbell8903.png)](https://www.gittip.com/mbell8903/)\n\n\n[Passport](http://passportjs.org/) strategy for authenticating with custom logic.\n\nThis module lets you authenticate using custom logic in your Node.js\napplications. It is based on passport-local module by Jared Hanson.\nBy plugging into Passport, custom authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-custom\n\n## Usage\n\n#### Configure Strategy\n\nThe custom authentication strategy authenticates users by custom logic of your choosing.\nThe strategy requires a `verify` callback, which is where the custom logic goes and calls\n`done` providing a user. Note that, req is always passed as the first parameter to the \n`verify` callback.\n\nHere is the pseudo code:\n\n```javascript\npassport.use('strategy-name', new CustomStrategy(\n  function(req, callback) {\n    // Do your custom user finding logic here, or set to false based on req object\n    callback(null, user);\n  }\n));\n```\n\nAnd a basic example:\n\n```javascript\npassport.use(new CustomStrategy(\n  function(req, done) {\n    User.findOne({\n      username: req.body.username\n    }, function (err, user) {\n      done(err, user);\n    });\n  }\n));\n```\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'custom'` strategy (or whatever you named the strategy upon registration), to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n```javascript\napp.post('/login',\n  passport.authenticate('custom', { failureRedirect: '/login' }),\n  function(req, res) {\n    res.redirect('/');\n  }\n);\n```\n\n## Tests\n\n    $ npm install\n    $ npm test\n\n## Credits\n\n  - [Mike Bell](http://github.com/mbell8903)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2014-2015 Mike Bell\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mbell8903/passport-custom.git"
  },
  "scripts": {
    "test": "mocha --reporter spec --require test/bootstrap/node test/*.test.js"
  },
  "version": "1.0.5"
}
