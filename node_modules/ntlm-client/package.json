{
  "_args": [
    [
      {
        "raw": "ntlm-client@git+https://git@github.com/gautamsi/node-ntlm-client.git",
        "scope": null,
        "escapedName": "ntlm-client",
        "name": "ntlm-client",
        "rawSpec": "git+https://git@github.com/gautamsi/node-ntlm-client.git",
        "spec": "git+https://git@github.com/gautamsi/node-ntlm-client.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:gautamsi/node-ntlm-client.git",
          "sshUrl": "git+ssh://git@github.com/gautamsi/node-ntlm-client.git",
          "httpsUrl": "git+https://git@github.com/gautamsi/node-ntlm-client.git",
          "gitUrl": "git://git@github.com/gautamsi/node-ntlm-client.git",
          "shortcut": "github:gautamsi/node-ntlm-client",
          "directUrl": "https://git@raw.githubusercontent.com/gautamsi/node-ntlm-client/master/package.json"
        }
      },
      "/home/ulknight/public_html/test1111/node_modules/ews-javascript-api-auth"
    ]
  ],
  "_from": "git+https://git@github.com/gautamsi/node-ntlm-client.git",
  "_id": "ntlm-client@0.1.2",
  "_inCache": true,
  "_location": "/ntlm-client",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ntlm-client@git+https://git@github.com/gautamsi/node-ntlm-client.git",
    "scope": null,
    "escapedName": "ntlm-client",
    "name": "ntlm-client",
    "rawSpec": "git+https://git@github.com/gautamsi/node-ntlm-client.git",
    "spec": "git+https://git@github.com/gautamsi/node-ntlm-client.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:gautamsi/node-ntlm-client.git",
      "sshUrl": "git+ssh://git@github.com/gautamsi/node-ntlm-client.git",
      "httpsUrl": "git+https://git@github.com/gautamsi/node-ntlm-client.git",
      "gitUrl": "git://git@github.com/gautamsi/node-ntlm-client.git",
      "shortcut": "github:gautamsi/node-ntlm-client",
      "directUrl": "https://git@raw.githubusercontent.com/gautamsi/node-ntlm-client/master/package.json"
    }
  },
  "_requiredBy": [
    "/ews-javascript-api-auth"
  ],
  "_resolved": "git+https://git@github.com/gautamsi/node-ntlm-client.git#e553ca93a873d99d6c2a544a97c5af3180702895",
  "_shasum": "dea560cd04375a14a940dc7e55b0c4217914f8f9",
  "_shrinkwrap": null,
  "_spec": "ntlm-client@git+https://git@github.com/gautamsi/node-ntlm-client.git",
  "_where": "/home/ulknight/public_html/test1111/node_modules/ews-javascript-api-auth",
  "author": {
    "name": "Nico Haller",
    "email": "nico.haller@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/clncln1/node-ntlm-client/issues"
  },
  "dependencies": {
    "extend": "^3.0.0",
    "request": "^2.66.0"
  },
  "description": "A node.js NTLM client with support for NTLM and NTLMv2 authentication",
  "devDependencies": {},
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "e553ca93a873d99d6c2a544a97c5af3180702895",
  "homepage": "https://github.com/clncln1/node-ntlm-client#readme",
  "keywords": [
    "ntlm",
    "ntlmv2",
    "client",
    "authentication"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "name": "ntlm-client",
  "optionalDependencies": {},
  "readme": "# ntlm-client\n\nA node.js NTLM client with support for NTLM and NTLMv2 authentication\n\n```\nnpm install ntlm-client\n```\n\n## API\n\n#### request(options)\n\nA convenience function that tries to authenticate against a given URL using the `request` module.\nIf NTLM is not supported, it will fallback to Basic Auth.\n\n* Arguments\n  * `options` an object holding below options for the authentication process:\n    * `uri` the target URL\n    * `method` the HTTP verb\n    * `username`\n    * `password`\n    * `request` this is optional. An object that holds options that should be passed to the request instance\n* Returns\n  * `Promise` when resolved, the `request` instance, the result and the response body will be passed\n\n---------------------------------------\n\n#### createType1Message([workstation, target])\n\nCreates a type 1 NTLM message to initialize the NTLM handshake\n\n* Arguments\n  * `workstation` Optional. If `undefined`, `os.hostname()` will be used\n  * `target` Optional. This is the domain/host we are trying to authenticate against.\n* Returns\n  * `string` Complete NTLM string that should be sent to the server in the `Authentication` header\n\n---------------------------------------\n\n#### decodeType2Message(str)\n\nDecodes a type 2 message received from the server including the NTLM challenge\n\n* Arguments\n  * `str` Either the base64 encoded type 2 message, or the complete `WWW-Authenticate` header, or an object containg the response headers (`http.IncomingMessage`)\n* Returns\n  * `type2Message` An object containing the following information about the received type 2 message: `flags`, `encoding`, `version`, `challenge`, `targetName`, `targetInfo`.\n\n---------------------------------------\n\n#### createType3Message(type2Message, username, password[, workstation, target])\n\nCreates a type 3 message based on the type 2 message received from the server.\n\n* Arguments\n  * `type2Message` The decoded type 2 message object\n  * `username`\n  * `password`\n  * `workstation` Optional. If falsy, `os.hostname()` will be used\n  * `target` Optional. If falsy, the target name from the type 2 message will be used. This is the domain/host we are trying to authenticate against.\n* Returns\n  * `string` Complete NTLM string that should be sent to the server in the `Authentication` header",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/clncln1/node-ntlm-client.git"
  },
  "version": "0.1.2"
}
